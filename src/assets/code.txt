<MyContext.Consumer>
          {context => (
            <React.Fragment>
              {/* {context.state.log ? (
                <p style={{ color: 'white' }}>{context.state.name}</p>
              ) : (
                <p style={{ color: 'white' }}>name</p>
              )} */}
              <p style={{ color: 'white' }}>{context.state.name}</p>

              {/* <button onClick={() => context.logIn(true)}>logIn</button>
              <button onClick={() => context.logOut(false)}>logOut</button> */}
            </React.Fragment>
          )}
        </MyContext.Consumer>

        {/* <li>
                      <p style={{ color: 'white' }}>{context.state.name}</p>
                    </li>
                    <li>
                      <button onClick={() => context.logOut(false)}>
                        logOut
                      </button>
                    </li> */}


                      // handleSubmit = event => {
  //   event.preventDefault();
  //   const FORM_DATA = new FormData(event.target);
  //   let jsonObject = {};
  //   for (const [key, value] of FORM_DATA.entries()) {
  //     jsonObject[key] = value;
  //   }

  //   fetch('http://localhost:4000/login', {
  //     headers: {
  //       Accept: 'application/json',
  //       'Content-Type': 'application/json',
  //     },
  //     method: 'POST',
  //     body: JSON.stringify(jsonObject),
  //   })
  //     .then(() => {
  //       this.setState({ logName: '', logPwd: '' });
  //       window.location.replace('http://localhost:3000/');
  //     })
  //     .catch(err => console.log('fetch error ' + err.message));
  // };